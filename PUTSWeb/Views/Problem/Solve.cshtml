<link rel="stylesheet" href="~/css/solve.css" />

@model SolveViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using PUTSWeb.Areas.Identity.Data
@using PUTSWeb.Helpers
@inject UserManager<ApplicationUser> UserManager
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Solve"];
}
@section Scripts
    {
    <script src="~/js/solve.js"></script>
    <script src="~/js/autoTextAreaHeight.js"></script>
}

    <div>
        @{}
        @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
        {
            <a asp-action="Evaluation" asp-route-id=@Model.ProblemID class="btn btn-warning">@Localizer["Evaluation"]</a>
        }

        <h2 id="Title">@Model.ProblemID. @Model.Name</h2>
        <hr />

        <div>
            <h4>@Localizer["Solution"]</h4>
            @Html.ValidationMessageFor(m => m.SourceFile, "", new { @class = "text-danger" })

            <form method="POST" enctype="multipart/form-data" asp-controller="Problem" asp-action="Solve">
                <input asp-for="ProblemID" type="hidden">
                <div class="form-group">
                    <div class="input-group input-file">

                        <span class="input-group-btn">
                            <button class="btn btn-primary btn-choose" type="button">@Localizer["Choose"]</button>
                        </span>

                        <input type="text" class="form-control" value="@Localizer["Choose a file..."]" />

                        <span class="input-group-btn">
                            <button class="btn btn-success" type="submit">@Localizer["Upload"]</button>
                        </span>
                    </div>
                </div>
            </form>

            @{
                ApplicationUser partialUser = await UserManager.GetUserAsync(User);
                ApplicationUser currentUser = await UserManager.Users
                                                            .Include(u => u.ProblemResults)
                                                                .ThenInclude(r => r.FirstResult)
                                                            .Include(u => u.ProblemResults)
                                                                .ThenInclude(r => r.BestResult)
                                                            .FirstOrDefaultAsync(u => u == partialUser);
                bool hasSolved = currentUser.ProblemResults.Exists(r => r.ProblemID == Model.ProblemID);
            }

            @if (hasSolved)
            {
                ProblemResult problemResult = currentUser.ProblemResults.First(r => r.ProblemID == Model.ProblemID);
                @if (problemResult.BestResult.PercentageResult == 0)
                {
                    <h5>@Localizer["Best result"] <span class="label label-danger">@problemResult.BestResult.PercentageResult%</span></h5>
                }
                else if (problemResult.BestResult.PercentageResult < 100)
                {
                    <h5>@Localizer["Best result"] <span class="label label-warning">@problemResult.BestResult.PercentageResult%</span></h5>
                }
                else
                {
                    <h5>@Localizer["Best result"] <span class="label label-success">@problemResult.BestResult.PercentageResult%</span></h5>
                }
            }
        </div>
        <hr />

        <h4>@Html.DisplayNameFor(m => m.Description)</h4>
            @Markdown.ParseHtmlString(@Model.Description)
        <hr />

        <h4>@Html.DisplayNameFor(m => m.InputDescription)</h4>
        @Html.TextAreaFor(m => m.InputDescription, new { @class = "readonlyarea", @readonly = "readonly" })
        <hr />

        <h4>@Html.DisplayNameFor(m => m.OutputDescription)</h4>
        @Html.TextAreaFor(m => m.OutputDescription, new { @class = "readonlyarea", @readonly = "readonly" })
        <hr />
        @if (Model.Examples.Count > 0)
        {
            <h4>@Html.DisplayNameFor(m => m.Examples)</h4>
            @for (int i = 0; i < Model.Examples.Count; i++)
            {
                <partial name="Example" for="Examples[i]" />
            }
            <hr />
        }
    </div>

<div>
    <a asp-action="List">@Localizer["Back to list"]</a>
</div>