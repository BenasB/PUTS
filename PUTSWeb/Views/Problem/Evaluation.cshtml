<link rel="stylesheet" href="~/css/list.css" />

@model EvaluationViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Evaluation"];
}

<div class="centered-text">
    <form asp-controller="Problem" asp-action="Evaluation" method="get" class="form-inline">
        <div class="input-group">
            @if (!string.IsNullOrEmpty((string)ViewData["CurrentEvaluationSearchString"]))
            {
                <input type="text" class="form-control" placeholder=@Localizer["Search"].Value name="searchString" autocomplete="off" value="@ViewData["CurrentEvaluationSearchString"]">
            }
            else
            {
                <input type="text" class="form-control" placeholder=@Localizer["Search"].Value name="searchString" autocomplete="off">
            }

            <div class="input-group-btn">
                <button class="btn btn-default" type="submit">
                    <i class="glyphicon glyphicon-search"></i>
                </button>
            </div>
        </div>
    </form>

    <h1>@Model.ProblemID. @Model.ProblemName</h1>
</div>


<table class="table table-striped table-hover">
    <thead>
        <tr>
            <!-- Column names -->
            <th scope="col">
                @Localizer["Full name"]
            </th>
            <th scope="col" class="col-sm-1 centered-text">
                @Localizer["Group"]
            </th>
            <th scope="col" class="col-sm-2 centered-text">
                @Localizer["First result"]
            </th>
            <th scope="col" class="col-sm-2 centered-text">
                @Localizer["Best result"]
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (EvaluationViewModel.EvaluationRow userData in Model.PaginatedList)
        {
            <tr>
                <td>
                    @userData.FullName
                </td>
                <td class="centered-text">
                    @userData.Group
                </td>
                <td class="centered-text">
                    @{
                        ProgramResult firstResult = userData.ProblemResult.FirstResult;
                        string cssClassFirst = firstResult.PercentageResult == 0 ? "label-danger" :
                            (firstResult.PercentageResult < 100 ? "label-warning" : "label-success");
                    }
                    <h4><span class="label @cssClassFirst">@firstResult.PassedTests/@firstResult.TestCount</span> <span class="label @cssClassFirst">@firstResult.PercentageResult%</span></h4>
                </td>

                <td class="centered-text">
                    @{
                        ProgramResult bestResult = userData.ProblemResult.BestResult;
                        string cssClassBest = bestResult.PercentageResult == 0 ? "label-danger" :
                            (bestResult.PercentageResult < 100 ? "label-warning" : "label-success");
                    }
                    <h4><span class="label @cssClassBest">@bestResult.PassedTests/@bestResult.TestCount</span> <span class="label @cssClassBest">@bestResult.PercentageResult%</span></h4>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.PaginatedList.HasPreviousPage)
{
    <a asp-action="List"
       asp-route-pageNumber="@(Model.PaginatedList.PageIndex - 1)"
       asp-route-currentSearchString="@ViewData["CurrentEvaluationSearchString"]"
       class="btn btn-default">
        @Localizer["Previous"]
    </a>
}

@if (Model.PaginatedList.HasNextPage)
{
    <a asp-action="List"
       asp-route-pageNumber="@(Model.PaginatedList.PageIndex + 1)"
       asp-route-currentSearchString="@ViewData["CurrentEvaluationSearchString"]"
       class="btn btn-default">
        @Localizer["Next"]
    </a>
}