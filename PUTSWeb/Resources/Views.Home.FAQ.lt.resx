<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Do other users see my results?" xml:space="preserve">
    <value>Ar kiti vartotojai mato mano rezultatus?</value>
  </data>
  <data name="FAQ" xml:space="preserve">
    <value>DUK</value>
  </data>
  <data name="Frequently asked questions" xml:space="preserve">
    <value>Dažnai užduodami klausimai</value>
  </data>
  <data name="How to start using PUTS?" xml:space="preserve">
    <value>Kaip pradėti naudoti PUTS?</value>
  </data>
  <data name="I found a problem/mistake in the system. What should I do?" xml:space="preserve">
    <value>Radau sistemos problemą/klaidą. Ką man daryti?</value>
  </data>
  <data name="I get 'Program timed out' error message. What should I do?" xml:space="preserve">
    <value>Gaunu „Programa viršijo ribojimo laiką“ klaidos pranešimą. Ką daryti?</value>
  </data>
  <data name="I have more questions. How can I contact you?" xml:space="preserve">
    <value>Turiu daugiau klausimų. Kaip man susisiekti?</value>
  </data>
  <data name="Is C++11 supported?" xml:space="preserve">
    <value>Ar palaikoma C++11?</value>
  </data>
  <data name="Make sure your program can be compiled on your machine. Check for missing semicolons, programming errors. The error message can help you." xml:space="preserve">
    <value>Įsitikinkite, kad programa susikompiliuoja jūsų įrenginyje. Patikrinkite ar netrūksta kabliataškių, nėra programavimo klaidų. Angliškas klaidos pranešimas gali padėti.</value>
  </data>
  <data name="Only C/C++." xml:space="preserve">
    <value>Tik C/C++.</value>
  </data>
  <data name="Only standard input is used. You get data like you get input from the console window, for example using cin." xml:space="preserve">
    <value>Tik standartinę įvestį. Pradinius duomenis gaunate taip pat, kaip gautumėte iš konsolės lango, pavyzdžiui naudojant cin.</value>
  </data>
  <data name="Only you and administrators can see your results." xml:space="preserve">
    <value>Tik jūs ir administratoriai gali matyti jūsų rezultatus.</value>
  </data>
  <data name="Report it to bud.benas@gmail.com" xml:space="preserve">
    <value>Praneškite apie tai el. paštu bud.benas@gmail.com</value>
  </data>
  <data name="Sign up and head to the problem list by clicking on 'Problems' tab in the navigation panel." xml:space="preserve">
    <value>Užsiregistruokite ir eikite į užduočių sąrašą, kurį galima pasiekti paspaudus „Uždaviniai“ navigacinėje panelėje.</value>
  </data>
  <data name="This usually occurs when the program is stuck (for example waiting for an input when there is none) or takes too much time to run and needs optimisation." xml:space="preserve">
    <value>Įprastai taip atsitinka, kai programa tampa užstrigusi (pavyzdžiui laukia įvesties, nors ji nepateikiama) arba veikia per ilgai ir reikalinga jos optimizacija.</value>
  </data>
  <data name="What programming languagues are supported?" xml:space="preserve">
    <value>Kokios programavimo kalbos palaikomos?</value>
  </data>
  <data name="What to do if the compilation failed?" xml:space="preserve">
    <value>Ką daryti, jei kompiliacija nesėkminga?</value>
  </data>
  <data name="What type of input do problems use?" xml:space="preserve">
    <value>Kokia įvestį naudoja uždaviniai?</value>
  </data>
  <data name="Yes." xml:space="preserve">
    <value>Taip.</value>
  </data>
  <data name="You can send a message to bud.benas@gmail.com" xml:space="preserve">
    <value>Jūs galite nusiųsti žinutę el. paštu bud.benas@gmail.com</value>
  </data>
</root>