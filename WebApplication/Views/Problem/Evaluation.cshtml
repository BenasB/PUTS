<environment include="Development">
    <link rel="stylesheet" href="~/css/list.css" />
</environment>
<environment exclude="Development">
    <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
</environment>

@model PaginatedList<ApplicationUser>
@using WebApplication.Areas.Identity.Data
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Evaluation"];
}

<h1>@Localizer["Users"]</h1>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <!-- Column names -->
            <th scope="col">
                @Localizer["Full Name"]
            </th>
            <th scope="col" class="col-sm-1 centered-text">
                @Localizer["Group"]
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (ApplicationUser user in Model)
        {
            if (await UserManager.IsInRoleAsync(user, "Admin"))
            {
                continue;
            }
            <tr>
                <td>
                    @{
                        string fullName = user.FirstName + " " + user.LastName;
                    }
                    @fullName
                </td>
                <td>
                    @user.Group
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.HasPreviousPage)
{
    <a asp-action="List"
       asp-route-sortString="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentSearchString="@ViewData["CurrentSearchString"]"
       class="btn btn-default">
        @Localizer["Previous"]
    </a>
}

@if (Model.HasNextPage)
{
    <a asp-action="List"
       asp-route-sortString="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentSearchString="@ViewData["CurrentSearchString"]"
       class="btn btn-default">
        @Localizer["Next"]
    </a>
}